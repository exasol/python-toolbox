name: Slow-Checks

on:
  workflow_call:

jobs:

  build-matrix:
    name: Generate Build Matrix
    uses: ./.github/workflows/matrix-all.yml
    permissions:
      contents: read

  Tests:
    name: Integration-Tests (Python-${{ matrix.python-version }}, Exasol-${{ matrix.exasol-version}})
    needs: [ build-matrix ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    # Even though the environment "manual-approval" will be created automatically,
    # it still needs to be configured to require interactive review.
    # See project settings on GitHub (Settings / Environments / manual-approval).
    environment: manual-approval
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: ./.github/actions/python-environment
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Tests and Collect Coverage
        run: poetry run -- nox -s test:integration -- --coverage --db-version ${{ matrix.exasol-version }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-python${{ matrix.python-version }}-slow
          path: .coverage
          include-hidden-files: true

  runner-images:
    runs-on: ubuntu-24.04
    steps:
      - id: generate
        run: |
          echo runners=$(jq -n '$ARGS.positional' --args \
            ubuntu-24.04 \
            int-linux-x64-4core-gpu-t4-ubuntu24.04-1 \
            int-linux-x64-4core-ubuntu24.04-1 \
          ) >> "$GITHUB_OUTPUT"
    outputs:
      runners: ${{ steps.generate.outputs.runners }}

  Verify-pipx-Installation:
    needs: runner-images
    name: Install Pipx on ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ fromJSON(needs.runner-images.outputs.runners) }}
    runs-on:
      labels: ${{ matrix.runner }}

    steps:

      - name: Setup Python & Poetry Environment
        uses: ./.github/actions/python-environment
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pipx version
        run: pipx --version
